<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Event Dashboard</title>
    <link rel="stylesheet" href="View/css/event-dashboard.css">
</head>
<body>

<form id="reload-form" action="/event-dashboard" method="POST" style="display: none;">
    <input type="hidden" name="eventId" value="">
</form>

<div class="dashboard">
    <div class="left-panel">
        <h1>Event Details</h1>
        <p><strong>Title:</strong> <?= htmlspecialchars($event->getTitle()) ?></p>
        <p><strong>Date:</strong> <?= htmlspecialchars($event->getEventDate()) ?></p>
        <p><strong>Type:</strong> <?= htmlspecialchars($event->getType()) ?></p>

        <?php if ($event->getHasOrganization()): ?>
            <h2>Organization Details</h2>
            <p><strong>Location:</strong> <?= htmlspecialchars($organization['place_address']) ?></p>
            <p><strong> Info for sending money:</strong> <?= htmlspecialchars($organization['organizer_payment_details']) ?></p>

            <h2>Participants</h2>
            <ul>
                <?php foreach ($participantsIds as $participant): ?>
                    <li>User ID: <?= htmlspecialchars($participant) ?></li>
                <?php endforeach; ?>
            </ul>

            <?php if (!$isParticipant): ?>
                <button id="join-event-btn">Join Event</button>
            <?php endif; ?>

        <?php else: ?>
            <button id="add-organization-btn">Add Organization</button>

            <div id="organization-form-container" style="display: none;">
                <h2>Add Organization</h2>
                <form id="add-organization-form">
                    <div>
                        <input type="hidden" id="eventId" name="eventId" value=<?= $eventId ?>>
                        <label for="organizer_payment_details">Payment Details:</label>
                        <input type="text" id="organizer_payment_details" name="organizer_payment_details" placeholder="Enter payment details">
                    </div>
                    <div>
                        <label for="place_address">Place Address:</label>
                        <input type="text" id="place_address" name="place_address" placeholder="Enter the place address"></>
                    </div>
                    <div>
                        <label for="is_anonymous">Make Anonymous:</label>
                        <input type="checkbox" id="is_anonymous" name="is_anonymous">
                    </div>
                    <div id="anonymous-users-container" style="display: none;">
                        <label for="excluded_user">Excluded User:</label>
                        <input type="text" id="excluded_user" name="excluded_user" placeholder="Enter username">
                    </div>
                    <button type="submit">Save Organization</button>
                </form>
            </div>

            <div id="organization-feedback"></div>

            
        <?php endif; ?>

    </div>

    <div class="right-panel">
        <h2>Event Comments</h2>
        <div id="comments">
            <?php foreach ($comments as $comment): ?>
                <div class="comment">
                    <p><strong>User <?= htmlspecialchars($comment->getUserId()) ?>:</strong></p>
                    <p><?= htmlspecialchars($comment->getContent()) ?></p>
                </div>
            <?php endforeach; ?>
        </div>
        <?php if ($isParticipant): ?>
            <!-- <form action="/create-comment-op" method="post"> -->
            <form id="comment-form">
                <input type="hidden" id="eventId" name="eventId" value=<?= $eventId ?>>
                <textarea id="new-comment" name="comment" placeholder="Add a comment..." required></textarea>
                <button type="submit">Submit</button>
            </form>
            <div id="comment-feedback"></div>
        <?php endif; ?>

    </div>
</div>

<!-- <script src="scripts/dashboard.js"></script> -->
<script>
    document.addEventListener("DOMContentLoaded", () => {
    const joinButton = document.getElementById('join-event-btn');
    const commentForm = document.getElementById('comment-form');
    const commentsContainer = document.getElementById('comments');

    // Join Event
    if (joinButton) {
        joinButton.addEventListener('click', async () => {
            const response = await fetch('/join-event', {
                method: 'POST',
                body: JSON.stringify({ eventId: EVENT_ID, userId: USER_ID }),
                headers: { 'Content-Type': 'application/json' }
            });

            if (response.ok) {
                location.reload();
            } else {
                alert('Failed to join the event.');
            }
        });
    }

    // Submit comment
    if (commentForm) {
    commentForm.addEventListener('submit', function (event) {
        event.preventDefault(); // Спира стандартното поведение на формата

        const comment = document.getElementById('new-comment').value;
        const eventId = document.getElementById('eventId').value;
        const commentsContainer = document.getElementById('comments');

        if (!commentsContainer) {
            console.error('Comments container not found!');
            return;
        }

        // AJAX querry for adding comments
        fetch('/create-comment-op', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                eventId: eventId,
                comment: comment,
            }),
        })
        .then(response => response.json())
        .then(data => {
            if (data.status === 'success') {
                document.getElementById('comment-feedback').textContent = 'Comment added successfully.';
                document.getElementById('comment-feedback').style.color = 'green';
                document.getElementById('new-comment').value = ''; // Clear the text field for the next comment

                // Add the new commnt to the html
                const commentElement = document.createElement('div');
                commentElement.classList.add('comment');
                commentElement.innerHTML = `<p><strong>User ${data.userId}:</strong></p><p>${data.comment}</p>`;
                commentsContainer.appendChild(commentElement);
            } else {
                document.getElementById('comment-feedback').textContent = 'Failed to add comment.';
                document.getElementById('comment-feedback').style.color = 'red';
                setTimeout(() => {
                            feedbackElement.style.display = 'none';
                        }, 3000); // 3000 miliseconds = 3 sec
            }
        })
        .catch(error => {
            console.error('Error:', error);
            document.getElementById('comment-feedback').textContent = 'An error occurred.';
            document.getElementById('comment-feedback').style.color = 'red';
            setTimeout(() => {
                        feedbackElement.style.display = 'none';
                    }, 3000); // 3000 miliseconds = 3 sec
        });
    });
}
 //Adding organization
    const addOrganizationBtn = document.getElementById("add-organization-btn");
    const organizationFormContainer = document.getElementById("organization-form-container");
    const isAnonymousCheckbox = document.getElementById("is_anonymous");
    const anonymousUsersContainer = document.getElementById("anonymous-users-container");

    // Показване/скриване на формуляра
    addOrganizationBtn.addEventListener("click", () => {
        if (organizationFormContainer.style.display === "none") {
            organizationFormContainer.style.display = "block";
            addOrganizationBtn.style.display = "none";
        } else {
            organizationFormContainer.style.display = "none";
            addOrganizationBtn.style.display = "block";
        }
    });

    // Показване/скриване на полето за изключени потребители
    isAnonymousCheckbox.addEventListener("change", () => {
        if (isAnonymousCheckbox.checked) {
            anonymousUsersContainer.style.display = "block";
        } else {
            anonymousUsersContainer.style.display = "none";
        }
    });
        
    // Обработка на формуляра за добавяне на организация
    const addOrganizationForm = document.getElementById("add-organization-form");
    addOrganizationForm.addEventListener("submit", (e) => {
        e.preventDefault(); // Спиране на презареждането на страницата

        // Извличане на данни ръчно от полетата във формуляра
        const eventId = document.getElementById("eventId").value; // Задайте правилния ID елемент
        const organizerPaymentDetails = document.getElementById("organizer_payment_details").value || null;
        const placeAddress = document.getElementById("place_address").value;
        const isAnonymous = document.getElementById("is_anonymous").checked;
        const excludedUserId = document.getElementById("excluded_user")?.value || null;


        const data = {
            eventId: eventId,
            organizer_payment_details: organizerPaymentDetails,
            place_address: placeAddress,
            is_anonymous: isAnonymous,
            excluded_user_id: excludedUserId,
        };

        // Изпращане на заявката чрез fetch
        fetch("/add-organization-op", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
        })
            .then((response) => response.json())
            .then((data) => {
                const feedback = document.getElementById("organization-feedback");
                if (data.status === "success") {
                    feedback.textContent = "Organization added successfully!";
                    feedback.style.color = "green";

                    //Reaload the page using the reload form
                    const reloadForm = document.getElementById("reload-form");
                    reloadForm.querySelector('input[name="eventId"]').value = eventId;

                //  send the post querry to refresh the page
                reloadForm.submit();
                } else {
                    feedback.textContent = `Failed to add organization: ${data.message}`;
                    feedback.style.color = "red";
                }
            })
            .catch((error) => {
                console.error("Error:", error);
                const feedback = document.getElementById("organization-feedback");
                feedback.textContent = "An error occurred while adding the organization.";
                feedback.style.color = "red";
            });
    });
});

</script>
</body>
</html>