<?php
$userId = isset($_SESSION['userId']) ? $_SESSION['userId'] : '';
$username = isset($_SESSION['username']) ? $_SESSION['username'] : '';
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Event List</title>
    <link rel="stylesheet" href="View/css/event_list.css">
</head>
<body>
<div class="dashboard-container">

    <!-- List of events -->
    <div class="event-list">
        <h1>All Events</h1>
        <?php if (empty($events)): ?>
            <p>No events found.</p>
        <?php else: ?>
            <ul>
                <?php foreach ($events as $event): ?>
                    <li>
                        <strong><?= htmlspecialchars($event->getTitle()) ?></strong>
                        <strong><?= htmlspecialchars($event->getType()) ?></strong>
                        <span><?= htmlspecialchars($event->getEventDate()) ?></span>
                        <form action="/event-dashboard" method="POST" class="view-button-form">
                            <input type="hidden" name="eventId" value="<?= $event->getId() ?>">
                            <button type="submit" class="view-button">View</button>
                        </form>
                    </li>
                <?php endforeach; ?>
            </ul>
        <?php endif; ?>
    </div>

    <!-- Form for creating events -->
    <div class="create-event">
        <h2>Create a New Event</h2>
        <!-- <form action="/create-event-op" method="post"> -->
        <form id="create-event-form">
        <div>
            <label for="title">Title:</label>
            <input type="text" id="title" name="title" required>
        </div>
        <div>
            <label for="event_date">Event Date:</label>
            <input type="date" id="event_date" name="event_date" required>
        </div>

        <div>
            <label for="type">Type:</label>
            <select id="type" name="type" onchange="toggleCustomTypeField()">
                <option value="Birthday">Birthday</option>
                <option value="Conference">Conference</option>
                <option value="Meeting">Meeting</option>
                <option value="Other">Other</option>
            </select>
        </div>

        <div id="customTypeContainer" style="display: none;">
            <label for="customType">Enter custom type:</label>
            <input type="text" id="customType" name="customType" placeholder="Enter type">
        </div>

        <div>
            <label for="visibility">Visibility:</label>
            <select id="visibility" name="visibility">
                <option value="public">Public</option>
                <option value="private">Private</option>
                <option value="friends">Friends</option>
            </select>
        </div>

        <div>
            <button type="submit">Create Event</button>
        </div>
    </form>

        <div id="create-event-feedback"></div>
    </div>
</div>

<script>
    function toggleCustomTypeField() {
        const typeSelect = document.getElementById('type');
        const customTypeContainer = document.getElementById('customTypeContainer');

        if (typeSelect.value === 'Other') {
            customTypeContainer.style.display = 'block';
        } else {
            customTypeContainer.style.display = 'none';
            document.getElementById('customType').value = '';
        }
    }

    // Handle the create event form submission
    document.getElementById('create-event-form').addEventListener('submit', function (e) {
        e.preventDefault(); // Prevent the default form submission

        const formData = new FormData(this);

        fetch('/create-event-op', {
            method: 'POST',
            body: formData,
        })
        .then(response => response.json())
        .then(data => {
            const feedback = document.getElementById('create-event-feedback');
            if (data.status === 'success') {
                feedback.textContent = 'Event created successfully!';
                feedback.style.color = 'green';
                // Optionally reload the page or dynamically add the new event to the list
                location.reload();
            } else {
                feedback.textContent = 'Failed to create event: ' + data.message;
                feedback.style.color = 'red';
            }
        })
        .catch(error => {
            console.error('Error:', error);
            const feedback = document.getElementById('create-event-feedback');
            feedback.textContent = 'An error occurred while creating the event.' + error;
            feedback.style.color = 'red';

            // Wait 5 seconds (5000 milliseconds) before reloading the page
            setTimeout(() => {
                location.reload();
            }, 5000);
        });
    });
</script>
</body>
</html>
